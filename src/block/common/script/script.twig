<script src="https://shop.grohe.kz/static/frontend/Arpo/grohe/ru_RU/jquery.js"></script>
{% if promocode_copy == 'true' %}
  <script>
      ;(function($, document, window, undefined) {
          $(document).on('ready', function() {
              var promocode = document.querySelector('.js-promocode');
              if(promocode) {
                  promocode.addEventListener('click', function(e) {
                      e.preventDefault();
                      var range = document.createRange();
                      range.selectNode(promocode);
                      window.getSelection().removeAllRanges();
                      window.getSelection().addRange(range);
                      document.execCommand('copy');
                      window.getSelection().removeAllRanges();
                      promocode.classList.add("message");
                      setTimeout(function () {
                          promocode.classList.remove("message");
                      }, 3000);
                  });
              }
          })
      })(jQuery, document, window, undefined);
  </script>
{% endif %}
{% if tabs == 'true' %}
  <script>
      ;(function(window, document, undefined) {
          document.addEventListener('DOMContentLoaded', function() {
              var tabBlocks = document.querySelectorAll('.tabs');

              if(tabBlocks.length) {
                  tabBlocks.forEach(function(block) {
                      var tabItems = block.querySelectorAll('.tabs__item');
                      var tabsInners = block.querySelectorAll('.tabs__inner');

                      tabItems.forEach(function(tab) {
                          tab.addEventListener('click', function() {
                              var isActive = tab.classList.contains('active');
                              if(!isActive) {
                                  tabItems.forEach(function(item) {
                                      item.classList.remove('active');
                                  });

                                  tabsInners.forEach(function(inner) {
                                      inner.classList.remove('active');
                                  });

                                  var target = tab.dataset.tab;
                                  var targetInner = block.querySelector(target);
                                  tab.classList.add('active');
                                  targetInner.classList.add('active');
                              }
                          })
                      })
                  });
              }
          });
      })(window, document, undefined);
  </script>
{% endif %}
{% if soc == 'true' %}
  <script src="//yastatic.net/es5-shims/0.0.2/es5-shims.min.js" ></script>
  <script src="//yastatic.net/share2/share.js" ></script>
{% endif %}
{% if countdown == 'true' %}
<script>
  ;(function(window, document, undefined) {
    document.addEventListener('DOMContentLoaded', function() {
      var сountdownTimer = document.querySelector('[data-сountdown-timer]');
      function declOfNum(number, words) {
        return words[(number % 100 > 4 && number % 100 < 20) ? 2 : [2, 0, 1, 1, 1, 2][(number % 10 < 5) ? number % 10 : 5]];
      }
      window.countDownClock = {
          number: 100,
          format: 'seconds',
          firstDay: '',
          currentDate: '',
          lastDay: '',

          convertFormat: function () {
              switch (this.format) {
                  case 'seconds':
                      return this.timer(this.number);
                  case 'minutes':
                      return this.timer(this.number * 60);
                  case 'hours':
                      return this.timer(this.number * 60 * 60);
                  case 'days':
                      return this.timer(this.number * 60 * 60 * 24);
              }
          },

          init: function () {
              this.firstDay = new Date;
              this.number = (this.lastDay.getTime() - this.firstDay.getTime()) / 1000;
              this.convertFormat();
          },

          timer: function (seconds) {
              const now = Date.now();
              const then = now + seconds * 1000;
              countdown = setInterval(() => {
                  const secondsLeft = Math.round((then - Date.now()) / 1000);
                  if (secondsLeft <= 0) {
                      clearInterval(countdown);
                      this.init();
                      return;
                  }
                  this.displayTimeLeft(secondsLeft);
              }, 1000);
          },

          clearHtml: function (element) {
              element.innerHTML = '';
          },

          convertString: function(value) {
              return Number(value.replace(/\s/g, ''));
          },

          displayTimeLeft: function (seconds) {
              let d = document;
              let daysElement = d.getElementById('days');
              let hoursElement = d.getElementById('hours');
              let minutesElement = d.getElementById('minutes');
              let secondsElement = d.getElementById('seconds');
              let timerElements = [secondsElement, minutesElement, hoursElement, daysElement];

              let splitTime = function (time) {
                  let innerTime = time;
                  if (innerTime.toString().length < 2) {
                      return `<span class="timer-number">0</span> <span class="timer-number">${innerTime.toString()}</span>`;
                  } else {
                      let stringMinutes = innerTime.toString().split('');
                      return `<span class="timer-number">${stringMinutes[0]}</span> <span class="timer-number">${stringMinutes[1]}</span>`;
                  }
              }

              let insertHtml = function (text) {
                  return '<div class="time-label">' + text + '</div>'
              }

              timerElements.forEach(element => this.clearHtml(element));
              daysElement.innerHTML = splitTime(Math.floor(seconds / 86400));
              hoursElement.innerHTML = splitTime(Math.floor((seconds % 86400) / 3600));
              minutesElement.innerHTML = splitTime(Math.floor((seconds % 86400) % 3600 / 60));
              secondsElement.innerHTML = splitTime(Math.floor((seconds % 86400) % 3600 % 60));

              let daysText = declOfNum(this.convertString(daysElement.textContent), ['День', 'Дня', 'Дней']);
              let hoursText = declOfNum(this.convertString(hoursElement.textContent), ['Час', 'Часа', 'Часов']);
              let minutesText = declOfNum(this.convertString(minutesElement.textContent), ['Минута', 'Минуты', 'Минут']);
              let secondsText = declOfNum(this.convertString(secondsElement.textContent), ['Секунда', 'Секунды', 'Секунд']);
              daysElement.insertAdjacentHTML('afterbegin', insertHtml(daysText));
              hoursElement.insertAdjacentHTML('afterbegin', insertHtml(hoursText));
              minutesElement.insertAdjacentHTML('afterbegin', insertHtml(minutesText));
              secondsElement.insertAdjacentHTML('afterbegin', insertHtml(secondsText));
          },

          setLastDay: function (lastDay) {
              this.lastDay = new Date(lastDay);
          }
      };
      if(сountdownTimer) {
        var сountdownTimerFinish = сountdownTimer.dataset.сountdownTimerFinish ? сountdownTimer.dataset.сountdownTimerFinish : '0000-00-00T00:00:00';
        countDownClock.setLastDay(сountdownTimerFinish);
        countDownClock.init();
      }
    });
  })(window, document, undefined);
</script>
{% endif %}
{% if toggle == 'true' %}
<script>
;(function($, window, document, undefined) {
    document.addEventListener('DOMContentLoaded', function() {
        var btn = document.querySelector('.js-toggle-btn');
        var content = document.querySelector('.js-toggle-content');
        btn.addEventListener('click', function(e) {
            e.preventDefault();
            btn.classList.toggle('active');
            content.classList.toggle('active');
        })
    });
})(jQuery, window, document);
</script>
{% endif %}